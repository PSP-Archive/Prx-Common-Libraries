/*
 * memory.h ver. 1.1
 *
 *  Created on: 2011/08/01
 *      Author: noname
 */

#ifndef MEM_H_

#define MEM_H_

#define MEM_AUTO 0
#define MEM_KERN 1
#define MEM_USER 2

/*---------------------------------------------------------------------------
  メモリ確保する場所の設定
    int mode: これから確保するメモリのパーティションを指定、
              MEM_AUTOの場合は自動判定する、初期値はMEM_AUTO

    return: 設定値を返す
---------------------------------------------------------------------------*/
int mem_set_alloc_mode(int mode);

/*---------------------------------------------------------------------------
  メモリ確保する場所の読取
    return: 設定値を返す
---------------------------------------------------------------------------*/
int mem_get_alloc_mode(void);

/*---------------------------------------------------------------------------
  直前に確保したメモリのパーティションを読取
    return : パーティション番号, 未取得の場合は0を返す
---------------------------------------------------------------------------*/
int mem_get_alloc_partition(void);

/*---------------------------------------------------------------------------
  メモリ確保
    int size: 利用メモリサイズ

    return: 確保したメモリへのポインタ
            エラーの場合はNULLを返す
---------------------------------------------------------------------------*/
void* mem_alloc(int size);

/*---------------------------------------------------------------------------
  アライメントを指定したメモリ確保
    int align : アライメントサイズ(2^nであること)
    int size  : 利用メモリサイズ

    return: 確保したメモリへのポインタ
            エラーの場合はNULLを返す
---------------------------------------------------------------------------*/
void* mem_align(int align, int size);

/*---------------------------------------------------------------------------
  メモリ解放
    *ptr: 確保したメモリへのポインタ
    return: エラーの場合は負の値を返す
---------------------------------------------------------------------------*/
s32 mem_free(void *ptr);

#endif
